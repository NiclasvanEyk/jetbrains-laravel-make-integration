package com.github.niclasvaneyk.laravelmake.plugin.laravel.events.connector

import com.github.niclasvaneyk.laravelmake.plugin.laravel.LaravelApplication
import java.io.File

class PhpEventPublisher(
    private val app: LaravelApplication,
    private val socket: File,
) {
    private val cachedServices = File(app.paths.path("bootstrap/cache/services.php"))
    private val cachedPackages = File(app.paths.path("bootstrap/cache/packages.php"))
    private val connectorPhpScript = app.paths.pluginFiles.resolve("ide_connector.php")
    private val connectorScriptContents: String get() {
        return this.javaClass.getResource("/php/ide_connector.php").readText()
    }


    fun install(): PhpEventPublisherInstallation {
        app.paths.pluginFiles.mkdirs()

        writeServiceProviderFile()
        // TODO: What if vendor dir does not yet exist?
        registerServiceProvider()

        return PhpEventPublisherInstallation(socket)
    }

    private fun registerServiceProvider() {
        val currentServices = cachedServices.readText()
        if (!currentServices.contains("LaravelMakeIdeConnectorServiceProvider")) {
            val newServices = currentServices
                // We replace it two times, once for the definition of the service
                // provider, and once for defining it as eager
                .replaceFirst("  ),", "  99999 => 'LaravelMakeIdeConnectorServiceProvider',),")
                .replaceFirst("  ),", "  99999 => 'LaravelMakeIdeConnectorServiceProvider',),")

            cachedServices.writeText(newServices)
        }

        val currentPackages = cachedPackages.readText()
        if (!currentPackages.contains("LaravelMakeIdeConnectorServiceProvider")) {
            val newPackages = currentPackages
                // We create an entry for a pseudo-package containing the
                // ServiceProvider
                .replace(");", """
                    // Generated by Laravel Make extension
                    'niclas-van-eyk/laravel-make-ide-connector' =>
                    array (
                        'providers' => array (
                            0 => 'LaravelMakeIdeConnectorServiceProvider',
                        ),
                    ),
                );    
            """.trimIndent())
                // we also need to make sure the class is actually loaded
                .replace(
                    "<?php ",
                    "<?php if (file_exists(__DIR__ . '/../../vendor/_laravel_make/ide_connector.php')) { require_once(__DIR__ . '/../../vendor/_laravel_make/ide_connector.php'); } "
                )

            cachedPackages.writeText(newPackages)
        }
    }

    private fun writeServiceProviderFile() {
        // TODO: Check Version
        if (!connectorPhpScript.isFile) {
            connectorPhpScript.writeText(connectorScriptContents)
        }
    }
}

